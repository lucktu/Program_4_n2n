name: manual-scan-all-to-build

on:
  workflow_dispatch:
    inputs:
      build-big-version:
        description: "Build all big versions? v2s|v2|v1"
        required: false
        type: boolean

jobs:
  scan-all:
    runs-on: ubuntu-latest
    env:
      APP_NAME: n2n_lucktu
      DOCKER_CONTEXT_PATH: .
    permissions:
      contents: read
      packages: write
    outputs:
      version_b_s_rcs: ${{ steps.build_version.outputs.all }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check build_version
        id: build_version
        run: |
          PROJECT_ROOT_DIR=$(pwd)
          echo "scan-all - PROJECT_ROOT_DIR: ${PROJECT_ROOT_DIR}"
          cd ./scripts
          chmod +x *.sh
          . init_logger.sh
          . init_path.sh
          . scan_all_save.sh
          LOG_INFO 'scan_all_save Successful'
          version_b_s_rcs=''
          for version_filename in $(ls ${RESULT_DIR}); do
            version_file=${RESULT_DIR}/${version_filename}

            if [[ -d ${version_file} ]]; then
                LOG_WARNING "跳过: 是文件夹 - ${version_file}"
                continue
            fi
            if [[ ${version_filename} == 'all.txt' ]]; then
                LOG_WARNING "跳过: 汇总文件 - ${version_file}"
                continue
            fi
            LOG_INFO "version_file: ${version_file}"
            # e.g. v3_3.1.0-54_1127
            version_b_s_rc=${version_file##*/}
            version_b_s_rc=${version_b_s_rc%%.txt}
            LOG_INFO "version_b_s_rc: ${version_b_s_rc}"
            version_b_s_rcs="${version_b_s_rcs},  \"${version_b_s_rc}\""
          done
          version_b_s_rcs="[${version_b_s_rcs:1} ]"
          LOG_INFO  version_b_s_rcs: ${version_b_s_rcs}
          echo "version_b_s_rcs={\"include\":${version_b_s_rcs}" >> $GITHUB_OUTPUT

  build-all:
    needs: [scan-all]
    strategy:
      max-parallel: 2
      matrix:
        version_b_s_rc: ${{ needs.scan-all.outputs.version_b_s_rcs }}

    uses: ./.github/workflows/docker-publish.yml
    with:
      version_b_s_rc: ${{ matrix.version_b_s_rc }}

  build-big-version:
    if: ${{ inputs.build-big-version }}
    strategy:
      max-parallel: 2
      matrix:
        version_b_s_rc: ${{ needs.scan-all.outputs.all.version_b_s_rcs }}

    uses: ./.github/workflows/docker-publish.yml
    with:
      version_b_s_rc: ${{ matrix.version_b_s_rc }}
